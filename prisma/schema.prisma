generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Blog {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  content  String
  image    String?
  likes    Int      @default(0)
  likedBy  String[]
  comments Comment[]  // Relation to Comment
}

model Comment {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String
  comment  String
  likes    Int      @default(0)
  replies  Reply[]  // Relation to Reply
  blog     Blog?    @relation(fields: [blogId], references: [id]) // Relation to Blog
  blogId   String?  // Foreign key to Blog
  user     User?    @relation(fields: [userId], references: [id], name: "UserToComment") // Relation to User with unique relation name
  userId   String?  // Foreign key to User
}

model Reply {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String
  replyContent  String  // Changed to avoid naming conflicts
  likes         Int      @default(0)
  comment       Comment? @relation(fields: [commentId], references: [id]) // Relation to Comment
  commentId     String?  // Foreign key to Comment
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String   @unique
  likes    String[] // List of liked blog post IDs or similar
  comments Comment[] @relation("UserToComments") // Relation to Comment with unique relation name
}
